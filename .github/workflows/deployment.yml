name: Test Project
on: # multiple events for action types.
  pull_request:
    types:
      - opened
  workflow_dispatch:
  push:
    # branches: 특정 브랜치에 푸시가 발생했을 때 워크플로우를 트리거
    branches:
      - main # only pushes to the main branch will trigger workflow
      - 'dev-*' # dev-new dev-this-is-new
      - 'feat/**' # feat/new  feat/new/button

    # paths-ignore:  해당 디렉토리 내의 변경은 워크플로우를 트리거 안함.
    paths-ignore:
      - '.github/workflows/*'

    # paths:  해당 디렉토리 내 변경이 있을 때만 워크플로우를 트리거하도록 설정
#    paths:
#      - 'src/**'


# certain branch에 event 있을 경우.
jobs:
#  test:
#    runs-on: ubuntu-latest # environment
#    steps:
#      # SECT: actions/checkout (리포지토리의 소스 코드를 워크플로우 실행 환경으로 체크아웃(다운로드)하는 기능)
#      - name: Get code
#        uses: actions/checkout@v3 # uses > action & run:  run > shell script (command)
#
#      # SECT: Install NODE
#      - name: Install NodeJS
#        uses: actions/setup-node@v3
#        with: # configuration (액션에 전달할 매개변수나 설정값을 지정할 때 사용됩니다. with 키워드 아래에 나열된 키-값 쌍은 해당 액션에 필요한 추가적인 설정을 제공)
#          node-version: 18
#
#      # SECT: Install Dependencies
#      - name: Install dependencies
#        run: npm ci
#
#      # SECT: Run Test
#      - name: Run Tests
#        run: npm test
  deploy:
#    needs: [test] # With "needs" pointing another job(identifying), you can run certain job after run first job.
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3

      - name: Install NodeJS
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Build Project
        run: npm run build

      - name: Deploy
        run: echo "Deploying..."


